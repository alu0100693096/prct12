var search_data = {"index":{"searchIndex":["matrizdensafixnum","matrizdensafraccion","matrizdispersafixnum","matrizdispersafraccion","prct12","fraccion","matriz","matrizdsl","matrizdensa","matrizdispersa","posicion","tipooperacion","tiposalida","test_matriz_combinacion","test_matriz_densa","test_matriz_dispersa","%()","*()","*()","+()","+()","-()","-()","-@()","/()","<=>()","==()","[]()","[]()","[]=()","[]=()","abs()","calcular()","coerce()","columnas=()","columnas=()","columnas=()","crear_matriz()","each()","encontrar()","eql?()","filas=()","filas=()","filas=()","hash()","max()","min()","new()","new()","new()","new()","new()","new()","operacion()","operando()","rec()","salida()","setup()","setup()","setup()","test_combinacion()","test_combinacion()","test_enteros()","test_enteros()","test_enteros()","test_fracciones()","test_fracciones()","to_f()","to_m()","to_matriz_array()","to_s()","to_s()","validate_sizes()","zero()","zero()","zero()","zero()","gemfile","gemfile.lock","guardfile","license","readme","rakefile","created.rid","prct12.gemspec"],"longSearchIndex":["matrizdensafixnum","matrizdensafraccion","matrizdispersafixnum","matrizdispersafraccion","prct12","prct12::fraccion","prct12::matriz","prct12::matrizdsl","prct12::matrizdensa","prct12::matrizdispersa","prct12::matrizdispersa::posicion","prct12::tipooperacion","prct12::tiposalida","test_matriz_combinacion","test_matriz_densa","test_matriz_dispersa","prct12::fraccion#%()","prct12::fraccion#*()","prct12::matriz#*()","prct12::fraccion#+()","prct12::matriz#+()","prct12::fraccion#-()","prct12::matriz#-()","prct12::fraccion#-@()","prct12::fraccion#/()","prct12::fraccion#<=>()","prct12::matriz#==()","prct12::matrizdensa#[]()","prct12::matrizdispersa#[]()","prct12::matrizdensa#[]=()","prct12::matrizdispersa#[]=()","prct12::fraccion#abs()","prct12::matrizdsl#calcular()","prct12::fraccion#coerce()","prct12::matriz#columnas=()","prct12::matrizdensa#columnas=()","prct12::matrizdispersa#columnas=()","prct12::matrizdsl#crear_matriz()","prct12::matriz#each()","prct12::matriz#encontrar()","prct12::matrizdispersa::posicion#eql?()","prct12::matriz#filas=()","prct12::matrizdensa#filas=()","prct12::matrizdispersa#filas=()","prct12::matrizdispersa::posicion#hash()","prct12::matriz#max()","prct12::matriz#min()","prct12::fraccion::new()","prct12::matriz::new()","prct12::matrizdsl::new()","prct12::matrizdensa::new()","prct12::matrizdispersa::new()","prct12::matrizdispersa::posicion::new()","prct12::matrizdsl#operacion()","prct12::matrizdsl#operando()","prct12::fraccion#rec()","prct12::matrizdsl#salida()","test_matriz_combinacion#setup()","test_matriz_densa#setup()","test_matriz_dispersa#setup()","test_matriz_densa#test_combinacion()","test_matriz_dispersa#test_combinacion()","test_matriz_combinacion#test_enteros()","test_matriz_densa#test_enteros()","test_matriz_dispersa#test_enteros()","test_matriz_densa#test_fracciones()","test_matriz_dispersa#test_fracciones()","prct12::fraccion#to_f()","prct12::matrizdsl#to_m()","prct12::matrizdsl#to_matriz_array()","prct12::fraccion#to_s()","prct12::matriz#to_s()","prct12::matriz#validate_sizes()","matrizdensafixnum#zero()","matrizdensafraccion#zero()","matrizdispersafixnum#zero()","matrizdispersafraccion#zero()","","","","","","","",""],"info":[["MatrizDensaFixnum","","MatrizDensaFixnum.html","","<p>Clase para devolver un cero en matrices densas de enteros.\n"],["MatrizDensaFraccion","","MatrizDensaFraccion.html","","<p>Clase para devolver un cero en matrices densas de fracciones.\n"],["MatrizDispersaFixnum","","MatrizDispersaFixnum.html","","<p>Clase para devolver un cero en matrices dispersas de enteros.\n"],["MatrizDispersaFraccion","","MatrizDispersaFraccion.html","","<p>Clase para devolver un cero en matrices dispersas de fracciones.\n"],["Prct12","","Prct12.html","","<p>Gema para operar con matrices densas y dispersas de diferentes tipos de\nobjetos.\n"],["Prct12::Fraccion","","Prct12/Fraccion.html","","<p>Clase que permite representar fracciones y realizar operaciones entre ellas\n"],["Prct12::Matriz","","Prct12/Matriz.html","","<p>Clase que permite la representación y manipulación de matrices.\n"],["Prct12::MatrizDSL","","Prct12/MatrizDSL.html","","<p>Clase que permite definir un DSL para la manipulación de matrices.\n"],["Prct12::MatrizDensa","","Prct12/MatrizDensa.html","","<p>Clase que permite la representación de matrices densas. Hereda de la clase\nmatriz.\n"],["Prct12::MatrizDispersa","","Prct12/MatrizDispersa.html","","<p>Clase que permite la representación de matrices dispersas. Hereda de la\nclase matriz.\n"],["Prct12::MatrizDispersa::Posicion","","Prct12/MatrizDispersa/Posicion.html","","<p>Clase que representa la clave del hash que guarda la matriz dispersa.\n"],["Prct12::TipoOperacion","","Prct12/TipoOperacion.html","","<p>Módulo que agrupa los símbolos que identifican las distintas operaciones\nque se pueden realizar entre …\n"],["Prct12::TipoSalida","","Prct12/TipoSalida.html","","<p>Módulo que agrupa los símbolos que identifican los distintos medios por los\nque se reproducirá el resultado …\n"],["Test_Matriz_Combinacion","","Test_Matriz_Combinacion.html","","<p>Clase para probar operaciones entre matrices densas y dispersas.\n"],["Test_Matriz_Densa","","Test_Matriz_Densa.html","","<p>Clase para probar operaciones entre matrices densas.\n"],["Test_Matriz_Dispersa","","Test_Matriz_Dispersa.html","","<p>Clase para probar operaciones entre matrices dispersas.\n"],["%","Prct12::Fraccion","Prct12/Fraccion.html#method-i-25","(other)","<p>Función para hallar el módulo de dos fracciones.  Como siempre será cero,\ndevolverá la fracción 0/1. …\n"],["*","Prct12::Fraccion","Prct12/Fraccion.html#method-i-2A","(other)","<p>Función para multiplicar una fracción con otro elemento.\n"],["*","Prct12::Matriz","Prct12/Matriz.html#method-i-2A","(other)","<p>Multiplicación de matrices.\n"],["+","Prct12::Fraccion","Prct12/Fraccion.html#method-i-2B","(other)","<p>Función para sumar una fracción con otro elemento.\n"],["+","Prct12::Matriz","Prct12/Matriz.html#method-i-2B","(other)","<p>Suma de matrices.\n"],["-","Prct12::Fraccion","Prct12/Fraccion.html#method-i-2D","(other)","<p>Función para restar una fracción con otro elemento.\n"],["-","Prct12::Matriz","Prct12/Matriz.html#method-i-2D","(other)","<p>Resta de matrices.\n"],["-@","Prct12::Fraccion","Prct12/Fraccion.html#method-i-2D-40","()","<p>Función para hallar la fracción cambiada de signo.\n"],["/","Prct12::Fraccion","Prct12/Fraccion.html#method-i-2F","(other)","<p>Función para dividir una fracción con otro elemento.\n"],["<=>","Prct12::Fraccion","Prct12/Fraccion.html#method-i-3C-3D-3E","(other)","<p>Función que sirve para realizar las operaciones de comparación.\n"],["==","Prct12::Matriz","Prct12/Matriz.html#method-i-3D-3D","(other)","<p>Comparación de matrices.\n"],["[]","Prct12::MatrizDensa","Prct12/MatrizDensa.html#method-i-5B-5D","(fila, columna)","<p>Permite acceder a un elemento de la matriz con el operador [].\n"],["[]","Prct12::MatrizDispersa","Prct12/MatrizDispersa.html#method-i-5B-5D","(fila, columna)","<p>Permite acceder a un elemento de la matriz con el operador [].\n"],["[]=","Prct12::MatrizDensa","Prct12/MatrizDensa.html#method-i-5B-5D-3D","(fila, columna, valor)","<p>Permite asignar un valor a una posición de la matriz con el operador [].\n"],["[]=","Prct12::MatrizDispersa","Prct12/MatrizDispersa.html#method-i-5B-5D-3D","(fila, columna, valor)","<p>Permite asignar un valor a una posición de la matriz con el operador [].\n"],["abs","Prct12::Fraccion","Prct12/Fraccion.html#method-i-abs","()","<p>Función para hallar el valor absoluto de una fracción.\n"],["calcular","Prct12::MatrizDSL","Prct12/MatrizDSL.html#method-i-calcular","()","<p>Este método protegido intenta calcular el resultado de la operación entre\nlos operandos introducidos …\n"],["coerce","Prct12::Fraccion","Prct12/Fraccion.html#method-i-coerce","(other)","<p>Función que permite operaciones con un entero. La operación retorna una\nfracción.\n"],["columnas=","Prct12::Matriz","Prct12/Matriz.html#method-i-columnas-3D","(value)","<p>Método para ser llamado por las subclases para modificar el nº de columnas.\n"],["columnas=","Prct12::MatrizDensa","Prct12/MatrizDensa.html#method-i-columnas-3D","(value)","<p>Modifica el número de columnas de la matriz.\n"],["columnas=","Prct12::MatrizDispersa","Prct12/MatrizDispersa.html#method-i-columnas-3D","(value)","<p>Modifica el número de columnas de la matriz y borra los elementos sobrantes\nsi el nuevo número de columnas …\n"],["crear_matriz","Prct12::MatrizDSL","Prct12/MatrizDSL.html#method-i-crear_matriz","(mat)","<p>Este método protegido crea una matriz del tipo indicado en el constructor a\npartir de un Array de Array …\n"],["each","Prct12::Matriz","Prct12/Matriz.html#method-i-each","()","<p>Iterador que recorre todos los elementos de la matriz.\n"],["encontrar","Prct12::Matriz","Prct12/Matriz.html#method-i-encontrar","()","<p>Devuelve la posición donde se cumple el bloque pasado como argumento\n"],["eql?","Prct12::MatrizDispersa::Posicion","Prct12/MatrizDispersa/Posicion.html#method-i-eql-3F","(other)","<p>Función para comprobar si dos objetos son iguales dentro de un hash.\n"],["filas=","Prct12::Matriz","Prct12/Matriz.html#method-i-filas-3D","(value)","<p>Método para ser llamado por las subclases para modificar el nº de filas.\n"],["filas=","Prct12::MatrizDensa","Prct12/MatrizDensa.html#method-i-filas-3D","(value)","<p>Modifica el número de filas de la matriz.\n"],["filas=","Prct12::MatrizDispersa","Prct12/MatrizDispersa.html#method-i-filas-3D","(value)","<p>Modifica el número de filas de la matriz y borra los elementos sobrantes si\nel número de filas nuevo …\n"],["hash","Prct12::MatrizDispersa::Posicion","Prct12/MatrizDispersa/Posicion.html#method-i-hash","()","<p>Función que devuelve el valor hash de cada objeto.\n"],["max","Prct12::Matriz","Prct12/Matriz.html#method-i-max","()","<p>Cálculo del máximo de los elementos de la matriz.\n"],["min","Prct12::Matriz","Prct12/Matriz.html#method-i-min","()","<p>Cálculo del mínimo de los elementos de la matriz.\n"],["new","Prct12::Fraccion","Prct12/Fraccion.html#method-c-new","(n,d)","<p>Función para inicializar el objeto de tipo fracción.\n"],["new","Prct12::Matriz","Prct12/Matriz.html#method-c-new","(filas, columnas)","<p>Constructor. No crea ningún contenedor.\n"],["new","Prct12::MatrizDSL","Prct12/MatrizDSL.html#method-c-new","(tipo_matriz, &bloque)","<p>El constructor. Permite definir el tipo de matriz que se va a crear y sus\ncaracterísticas. Un ejemplo …\n"],["new","Prct12::MatrizDensa","Prct12/MatrizDensa.html#method-c-new","(fils, cols)","<p>Constructor. Llama al de la clase madre para las filas y las columnas,  e\ninicializa la matriz a 0 mediante …\n"],["new","Prct12::MatrizDispersa","Prct12/MatrizDispersa.html#method-c-new","(filas, columnas)","<p>Constructor. Llama al de la clase madre para las filas y las columnas,  e\ninicializa el hash especificando …\n"],["new","Prct12::MatrizDispersa::Posicion","Prct12/MatrizDispersa/Posicion.html#method-c-new","(fil, col)","<p>Constructor que inicializa los valores de f y c.\n"],["operacion","Prct12::MatrizDSL","Prct12/MatrizDSL.html#method-i-operacion","(tipo_operacion)","<p>Indica la operación a realizar. Si se especifica varias veces, prevalece la\núltima.\n"],["operando","Prct12::MatrizDSL","Prct12/MatrizDSL.html#method-i-operando","(def_matriz)","<p>Añade una matriz (representada como Array de Arrays) para realizar la\noperación. Se pueden añadir tantas …\n"],["rec","Prct12::Fraccion","Prct12/Fraccion.html#method-i-rec","()","<p>Función para hallar la inversa de una fracción.\n"],["salida","Prct12::MatrizDSL","Prct12/MatrizDSL.html#method-i-salida","(tipo_salida, fichero_salida = \"\")","<p>Indica los distintos métodos de salida que se utilizarán para mostrar el\nresultado. Se pueden indicar …\n"],["setup","Test_Matriz_Combinacion","Test_Matriz_Combinacion.html#method-i-setup","()","<p>Crear e inicializar matrices.\n"],["setup","Test_Matriz_Densa","Test_Matriz_Densa.html#method-i-setup","()","<p>Crear e inicializar matrices.\n"],["setup","Test_Matriz_Dispersa","Test_Matriz_Dispersa.html#method-i-setup","()","<p>Crear e inicializar matrices.\n"],["test_combinacion","Test_Matriz_Densa","Test_Matriz_Densa.html#method-i-test_combinacion","()","<p>Pruebas con enteros y fracciones.\n"],["test_combinacion","Test_Matriz_Dispersa","Test_Matriz_Dispersa.html#method-i-test_combinacion","()","<p>Pruebas con enteros y fracciones.\n"],["test_enteros","Test_Matriz_Combinacion","Test_Matriz_Combinacion.html#method-i-test_enteros","()","<p>Pruebas con enteros.\n"],["test_enteros","Test_Matriz_Densa","Test_Matriz_Densa.html#method-i-test_enteros","()","<p>Pruebas con enteros.\n"],["test_enteros","Test_Matriz_Dispersa","Test_Matriz_Dispersa.html#method-i-test_enteros","()","<p>Pruebas con enteros.\n"],["test_fracciones","Test_Matriz_Densa","Test_Matriz_Densa.html#method-i-test_fracciones","()","<p>Pruebas con fracciones.\n"],["test_fracciones","Test_Matriz_Dispersa","Test_Matriz_Dispersa.html#method-i-test_fracciones","()","<p>Pruebas con fracciones.\n"],["to_f","Prct12::Fraccion","Prct12/Fraccion.html#method-i-to_f","()","<p>Función para calcular el resultado del cociente en Float.\n"],["to_m","Prct12::MatrizDSL","Prct12/MatrizDSL.html#method-i-to_m","()","<p>Devuelve la matriz resultado de la operación utilizando el tipo indicado en\nel constructor.\n"],["to_matriz_array","Prct12::MatrizDSL","Prct12/MatrizDSL.html#method-i-to_matriz_array","()","<p>Devuelve un array con las matrices utilizadas como operandos utilizando el\ntipo especificado en el constructor. …\n"],["to_s","Prct12::Fraccion","Prct12/Fraccion.html#method-i-to_s","()","<p>Función para transformar la fracción a un String.\n"],["to_s","Prct12::Matriz","Prct12/Matriz.html#method-i-to_s","()","<p>Método para convertir a String.\n"],["validate_sizes","Prct12::Matriz","Prct12/Matriz.html#method-i-validate_sizes","(*values)","<p>Se asegura que los valores pasados están dentro del rango [0, Infinito) y\nque son números enteros. En …\n"],["zero","MatrizDensaFixnum","MatrizDensaFixnum.html#method-i-zero","()",""],["zero","MatrizDensaFraccion","MatrizDensaFraccion.html#method-i-zero","()","<p>Devuelve un cero.\n"],["zero","MatrizDispersaFixnum","MatrizDispersaFixnum.html#method-i-zero","()","<p>Devuelve un cero.\n"],["zero","MatrizDispersaFraccion","MatrizDispersaFraccion.html#method-i-zero","()","<p>Devuelve un cero.\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Specify your gem&#39;s dependencies in prct12.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  prct12 (1.3.2)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p>guard &#39;bundler&#39; do\n\n<pre>watch(&#39;Gemfile&#39;)\nwatch(/^.+\\.gemspec/)</pre>\n<p>end\n"],["LICENSE","","LICENSE_txt.html","","<p>Copyright © 2013 Laura Fariña, Sergio Afonso\n<p>MIT License\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>Prct12\n<p>Estado actual de construcción de la gema: {Build Status]\n<p>Clases que permiten gestionar matrices …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require &#39;rspec/core/rake_task&#39;\n<p>RSpec::Core::RakeTask.new …\n"],["created.rid","","doc/created_rid.html","",""],["prct12.gemspec","","prct12_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"]]}}